# Generated by Django 2.0.12 on 2019-03-20 11:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('level', models.PositiveIntegerField(default=1)),
                ('question_id', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('statement', models.CharField(max_length=10000)),
                ('answer', models.CharField(max_length=100)),
                ('maximum_marks', models.PositiveIntegerField(default=500)),
                ('minimum_marks', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('LOCKED', 'locked'), ('UNLOCKED', 'unlocked'), ('HIDDEN', 'hidden')], max_length=20)),
            ],
            options={
                'ordering': ['level', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('total_wrong_attempts', models.PositiveIntegerField(default=0)),
                ('total_time_taken', models.DurationField()),
                ('total_score', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-total_score', 'total_time_taken', 'total_wrong_attempts'],
            },
        ),
        migrations.CreateModel(
            name='UserQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('level', models.PositiveIntegerField(default=1)),
                ('wrong_attempts', models.PositiveIntegerField(default=0)),
                ('marks_obtained', models.PositiveIntegerField(default=0)),
                ('time_taken', models.DurationField(null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.UserProfile')),
            ],
            options={
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='UserSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('answer', models.CharField(max_length=10)),
                ('status', models.CharField(choices=[('AC', 'accepted'), ('WA', 'wrong')], max_length=10)),
                ('marks', models.PositiveIntegerField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.UserProfile')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
    ]
